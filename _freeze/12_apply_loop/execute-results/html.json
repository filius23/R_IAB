{
  "hash": "bfe8ba94f9df49f5ffb80a4dd2f33082",
  "result": {
    "markdown": "# Schleifen & Funktionen\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npend12 <- haven::read_dta(\"./orig/PENDDAT_cf_W13.dta\",\n                         col_select = c(\"pnr\",\"welle\",\"netges\",\"schul2\",\"azges1\",\"palter\",\"famstand\",\"zpsex\",\"statakt\",\"hnr\")) %>% \n  filter(netges > 0, schul2 %in% 2:7, palter > 0, famstand > 0, azges1 > 0 , welle == 13) %>% \n  mutate(\n    across(matches(\"palter|netges|azges1\"),~as.numeric(.x)),\n    famstand_fct = factor(famstand,levels = 1:5,labels = c(\"Ledig\",\"Verheiratet\", \"Verheiratet getr. lebd.\", \"Geschieden\", \"Verwitwet\")),\n    schul2_fct = factor(schul2,levels = 2:7, labels = c(\"ohne\",\"Förderschule\",\"Hauptschule\",\"Mittlere Reife\",\"FOS/BOS\",\"Abi\")),\n    statakt_fct = factor(statakt,levels = 1:3, labels = c(\"erbwerbstätig\",\"arbeitslos\",\"inaktiv\")),\n    zpsex_fct = factor(zpsex,levels = 1:2,labels =c(\"Männer\",\"Frauen\")))\n```\n:::\n\n\nSchleifen im Sinne von `for()`-Loops werden in R selten verwendet. \n\nStattdessen werden meist Funktionen `function(...)` mit Hilfe von `lapply()` bzw. `map()` aus `{purrr}`/`{tidyverse}` [^lapply] über eine Reihe von Werten geschleift.\n\n[^lapply]: in base R gibt es `lapply()`, das ungefähr das gleiche macht.\n\nDie grundlegende Idee ist zunächst die gleiche wie bei klassischen `for()`-Loops: \n\n1. wir legen fest, was gemacht werden soll (in einer `function()`)\n2. wir erstellen eine Serie an Werten\n3. und wenden die `function()` auf diese an\n\nGrundsätzlich können wir in R solche Schleife auf wirklich alles anwenden: `data.frames()`, Vektoren, `list`s.\nDas macht das Vorgehen sehr flexibel und kann uns beispielsweise helfen, eine Modellserie zu erstellen, Grafiken für verschiedene Untergruppen erstellen, oder ...\n\n## Plot-Serien\n\nWir möchten die gleiche für eine Reihe unterschiedlicher Untergruppen erstellen: beispielsweise möchten wir folgende Grafik für alle Ausprägungskombinationen von `famstand` und `zpsex` erstellen:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npend12 %>%\n  ggplot(aes(x = azges1,  y = netges)) + \n  geom_point() + \n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](12_apply_loop_files/figure-html/unnamed-chunk-2-1.png){width=288}\n:::\n:::\n\n\nWir erstellen zunächst eine `function()`, welche zwei Argumente enthält. \nDiese geben wir dann in einen `filter()`-Befehl innerhalb der `function()` an und verwenden sie außerdem, um einen Titel zu generieren. Das können wir mit `paste0()`, welches fixe Inputs und Vektoren-Inputs zu einem `character` zusammenfügt.[^paste]\n\n[^paste]: Es können auch mehrere  `character` das Ergebnis eines `paste0()` sein: siehe bspw. `paste0(\"no\",1:5)`\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_fun1 <- function(famstat_filter){\n  pend12 %>%\n    filter(famstand_fct == famstat_filter) %>% \n    ggplot(aes(x = azges1,  y = netges)) + \n    geom_point() + \n    theme_minimal() +\n    labs(title = paste0(\"Familienstatus: \",famstat_filter))\n}\n```\n:::\n\n\nMit dieser `function()` können wir nur leicht die jeweiligen Plots erstellen:\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_fun1(famstat_filter = \"Ledig\")\n```\n\n::: {.cell-output-display}\n![](12_apply_loop_files/figure-html/plfn1-1.png){width=288}\n:::\n:::\n\n\nWie kommen wir jetzt aber an alle Kombinationen?\nIn einem ersten Schritt können wir mit `lapply()` eine Schleife über die Ausprägungen von `famstat_fct` erstellen und die Plots für die Frauen erstellen:\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels(pend12$famstand_fct)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Ledig\"                   \"Verheiratet\"            \n[3] \"Verheiratet getr. lebd.\" \"Geschieden\"             \n[5] \"Verwitwet\"              \n```\n:::\n\n```{.r .cell-code}\nfam_plots <- lapply(levels(pend12$famstand_fct), plot_fun1)\nclass(fam_plots)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"list\"\n```\n:::\n\n```{.r .cell-code}\nfam_plots[[1]] # ersten Plot aus der fam_plots-Liste aufrufen\n```\n\n::: {.cell-output-display}\n![](12_apply_loop_files/figure-html/plotlapply-1.png){width=288}\n:::\n:::\n\n\nEtwas übersichtlicher ist das ganze, wenn wir die Plots in einem `data.frame`( bzw. einem `tibble`) ablegen neben einer Spalte mit den Ausprägungen:\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_df <- \n  data.frame(famstand_fct = levels(pend12$famstand_fct)) %>% \n  mutate(plots = map(famstand_fct,plot_fun1))\n\n# head(plot_df)\n\nplot_df %>% filter(famstand_fct ==  \"Verheiratet\") %>% pull(plots)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n```\n:::\n\n::: {.cell-output-display}\n![](12_apply_loop_files/figure-html/plotex1-1.png){width=288}\n:::\n:::\n\n\n\nWas jetzt aber, wenn wir mehrere Variablen berücksichtigen möchten?\n\nDazges1u erstellen wir zunächst eine neue `function()` mit mehreren Argumenten und erweitern auch den `filter()` und `paste0()`-Befehl innerhalb der Funktionen:\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_fun2 <- function(famstat_filter, zpsex_filter){\n  pend12 %>%\n    filter(famstand_fct == famstat_filter, zpsex_fct == zpsex_filter) %>% \n    ggplot(aes(x = azges1,  y = netges)) + \n    geom_point() + \n    theme_minimal() +\n    labs(title = paste0(\"Familienstatus: \",famstat_filter, \" Geschlecht: \", zpsex_filter))\n}\n```\n:::\n\n\nMit `expand_grid` können wir sehr schnell einen `data.frame` mit allen Kombinationen der angegebenen Vektoren erstellen:\n\n::: {.cell}\n\n```{.r .cell-code}\nexpand_grid(famstand_fct = levels(pend12$famstand_fct),\n            zpsex_fct = levels(pend12$zpsex_fct))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   famstand_fct            zpsex_fct\n   <chr>                   <chr>    \n 1 Ledig                   Männer   \n 2 Ledig                   Frauen   \n 3 Verheiratet             Männer   \n 4 Verheiratet             Frauen   \n 5 Verheiratet getr. lebd. Männer   \n 6 Verheiratet getr. lebd. Frauen   \n 7 Geschieden              Männer   \n 8 Geschieden              Frauen   \n 9 Verwitwet               Männer   \n10 Verwitwet               Frauen   \n```\n:::\n:::\n\n\nDiese beiden Spalten geben wir jetzt in unseren `map()`-Befehl - allerdings haben wir ja jetzt zwei Input-Argumente, nicht nur eines. Daher verwenden wir `pmap()`, welches mehrere Inputs verwenden kann:\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_df2 <- \n  expand_grid(famstand_fct = levels(pend12$famstand_fct),\n              zpsex_fct = levels(pend12$zpsex_fct)) %>% \n    mutate(plots = pmap(list(famstat_filter= famstand_fct,zpsex_filter = zpsex_fct),  # Variablen mit = den Funktions-Argumenten zuweisen\n                        plot_fun2))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_df2 %>% filter(famstand_fct ==  \"Verheiratet\",zpsex_fct ==  \"Frauen\") %>% pull(plots)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n```\n:::\n\n::: {.cell-output-display}\n![](12_apply_loop_files/figure-html/unnamed-chunk-6-1.png){width=480}\n:::\n\n```{.r .cell-code}\nplot_df2 %>% filter(famstand_fct ==  \"Verheiratet\",zpsex_fct ==  \"Männer\") %>% pull(plots)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n```\n:::\n\n::: {.cell-output-display}\n![](12_apply_loop_files/figure-html/unnamed-chunk-6-2.png){width=480}\n:::\n:::\n\n\n\n### [Übung](#manyplts) {#ue12_00}\n\n## Verschiedene Modelle auf die gleichen Daten als `function()` mit `map()` anwenden\n\nWir möchten folgende Modelle alls auf Basis des PASS CampusFiles schätzen:\n\n+ Modell 1 = `netges ~ azges1`\n+ Modell 2 = `netges ~ azges1 + zpsex_fct`\n+ Modell 3 = `netges ~ azges1 + zpsex_fct + schul2_fct`\n+ Modell 4 = `netges ~ azges1 + zpsex_fct + schul2_fct + palter`\n\nNatürlich würde so etwas funktionieren, würde aber vier separate Modelle erstellen:\n\n::: {.cell}\n\n```{.r .cell-code}\nmod1 <- lm(netges ~ azges1, data = pend12)\nmod2 <- lm(netges ~ azges1 + zpsex_fct, data = pend12)\nmod3 <- lm(netges ~ azges1 + zpsex_fct + schul2_fct, data = pend12)\nmod4 <- lm(netges ~ azges1 + zpsex_fct + schul2_fct + palter, data = pend12)\n```\n:::\n\n\nWir definieren dann eine `function()`, in der wir angeben, dass das angegebene Argument die Formel für ein `lm()` sein soll - das Ergebnis dieses `lm()` lassen wir uns dann ausgeben.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_function <- function(modx){\n  mx <- lm(formula = modx,data = pend12)\n  return(mx) \n}\n```\n:::\n\n\nAls Test können wir `mod_function()` jetzt einmal verwenden:\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_function(\"netges ~ azges1\") %>% summary() # sieht gut aus\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = modx, data = pend12)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n -1636   -778   -313    260  86745 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept) 1645.852    504.949   3.259  0.00118 **\nazges1         7.758     14.233   0.545  0.58592   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3624 on 613 degrees of freedom\nMultiple R-squared:  0.0004844,\tAdjusted R-squared:  -0.001146 \nF-statistic: 0.2971 on 1 and 613 DF,  p-value: 0.5859\n```\n:::\n:::\n\n\n\nIm nächsten Schritt erstellen wir jetzt einen Vektor mit verschiedenen Modellvarianten:\n\n::: {.cell}\n\n```{.r .cell-code}\nmdls <- c(\n  \"Modell 1\" = \"netges ~ azges1\",\n  \"Modell 2\" = \"netges ~ azges1 + zpsex_fct\",\n  \"Modell 3\" = \"netges ~ azges1 + zpsex_fct + schul2_fct\",\n  \"Modell 4\" = \"netges ~ azges1 + zpsex_fct + schul2_fct + palter\"\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmdls\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                           Modell 1 \n                                  \"netges ~ azges1\" \n                                           Modell 2 \n                      \"netges ~ azges1 + zpsex_fct\" \n                                           Modell 3 \n         \"netges ~ azges1 + zpsex_fct + schul2_fct\" \n                                           Modell 4 \n\"netges ~ azges1 + zpsex_fct + schul2_fct + palter\" \n```\n:::\n:::\n\nMit `map` wenden wir unsere `mod_function` jetzt auf den Modell-Vektor an:\n\n::: {.cell}\n\n```{.r .cell-code}\nmods <- map(mdls,mod_function)\nmods$`Modell 1`\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = modx, data = pend12)\n\nCoefficients:\n(Intercept)       azges1  \n   1645.852        7.758  \n```\n:::\n\n```{.r .cell-code}\nmods$`Modell 2`\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = modx, data = pend12)\n\nCoefficients:\n    (Intercept)           azges1  zpsex_fctFrauen  \n        2848.48           -13.22         -1001.75  \n```\n:::\n:::\n\n\nAußerdem können wir uns alle Modelle auch direkt in `modelsummary` ausgeben lassen:\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(modelsummary)\nmodelsummary(mods,stars = T,gof_omit = \"IC|RM|Log\",output = \"flextable\")\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"tabwid\"><style>.cl-163ba944{}.cl-163258a8{font-family:'Arial';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-16360ad4{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-163623fc{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-16362406{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-16362407{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-16362410{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-16362411{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-163ba944'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-163623fc\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"> </span></p></th><th class=\"cl-163623fc\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">Modell 1</span></p></th><th class=\"cl-163623fc\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">Modell 2</span></p></th><th class=\"cl-163623fc\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">Modell 3</span></p></th><th class=\"cl-163623fc\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">Modell 4</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">(Intercept)</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">1645.852**</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">2848.480***</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">1791.272+</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">435.791</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">(504.949)</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">(632.800)</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">(939.483)</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">(1085.866)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">azges1</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">7.758</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">-13.219</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">-12.710</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">-12.526</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">(14.233)</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">(15.655)</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">(15.740)</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">(15.676)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">zpsex_fctFrauen</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">-1001.751**</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">-1040.178**</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">-1097.517***</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">(321.565)</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">(327.598)</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">(327.076)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">schul2_fctFörderschule</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">21.987</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">-541.256</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">(2652.271)</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">(2651.220)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">schul2_fctHauptschule</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">670.337</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">461.187</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">(808.122)</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">(809.263)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">schul2_fctMittlere Reife</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">866.103</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">758.984</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">(766.548)</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">(764.622)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">schul2_fctFOS/BOS</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">1362.607</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">1338.477</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">(882.266)</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">(878.674)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">schul2_fctAbi</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">1509.094*</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">1536.568*</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">(764.996)</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">(761.916)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">palter</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">32.454*</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\"></span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">(13.196)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16362407\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">Num.Obs.</span></p></td><td class=\"cl-16362407\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">615</span></p></td><td class=\"cl-16362407\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">615</span></p></td><td class=\"cl-16362407\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">615</span></p></td><td class=\"cl-16362407\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">615</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">R2</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">0.000</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">0.016</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">0.029</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">0.038</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">R2 Adj.</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">-0.001</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">0.013</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">0.017</span></p></td><td class=\"cl-16362406\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">0.025</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16362410\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">F</span></p></td><td class=\"cl-16362410\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">0.297</span></p></td><td class=\"cl-16362410\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">5.003</span></p></td><td class=\"cl-16362410\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">2.551</span></p></td><td class=\"cl-16362410\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">3.007</span></p></td></tr></tbody><tfoot><tr style=\"overflow-wrap:break-word;\"><td  colspan=\"5\"class=\"cl-16362411\"><p class=\"cl-16360ad4\"><span class=\"cl-163258a8\">+ p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001</span></p></td></tr></tfoot></table></div>\n```\n:::\n:::\n\n\n\n### [Übung](#manymod) {#ue12_01}\n\n## Das gleiche Modell auf verschiedene Datensets anwenden\n\nDer zweite Fall ist das gleiche Modell auf verschiedene Datensätze anzuwenden - wer kennt es nicht: \n\n> *\"Habt ihr das auch mal getrennt für Ost/West gerechnet?\"*\n\n\n...dafür hilft uns `nest(.by =)` - damit können wir den Datensatz entlang einer Variable splitten und zusammenfassen:\n\n::: {.cell}\n\n```{.r .cell-code}\nhh_dat <- haven::read_dta(\"./orig/HHENDDAT_cf_W13.dta\", col_select = c(\"hnr\",\"welle\",\"region\"))\n# p_reg <- haven::read_dta(\"./orig/p_register_cf_W13.dta\", col_select = c(\"pnr\",\"hnr\"))\n\npend12_ow <- \n  pend12 %>%\n    left_join(hh_dat,by = c(\"hnr\",\"welle\")) %>% \n     mutate(east = ifelse(region == 2,\"east\",\"west\")) %>% \n  select(netges,azges1,schul2_fct,palter,zpsex_fct, east)\n\npend12_ow_nest <- \n  pend12_ow %>% \n      nest(.by=east)\n```\n:::\n\nIn der Spalte `data` sind jetzt also die Datensätze für Ost und West enthalten:\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(pend12_ow_nest$data[[1]],n=3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 5\n  netges azges1 schul2_fct     palter zpsex_fct\n   <dbl>  <dbl> <fct>           <dbl> <fct>    \n1   1020     21 Mittlere Reife     35 Frauen   \n2    715     44 ohne               57 Männer   \n3   3195     44 Abi                63 Frauen   \n```\n:::\n\n```{.r .cell-code}\nhead(pend12_ow_nest$data[[2]],n=3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 5\n  netges azges1 schul2_fct     palter zpsex_fct\n   <dbl>  <dbl> <fct>           <dbl> <fct>    \n1    500     21 Mittlere Reife     43 Männer   \n2   1380     40 Mittlere Reife     61 Männer   \n3   1120     40 Hauptschule        55 Männer   \n```\n:::\n:::\n\n\nAuf den so gesplitteten Datensatz können wir mit `map()` ein `lm()`-Modell anwenden:\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_ow <- \n  pend12_ow_nest %>% \n    mutate(model = map(data, function(data) {\n      lm(\"netges ~ palter + zpsex_fct\", data = data) # ad-hoc function --> siehe tip)\n    })) \n```\n:::\n\n\n::: {.callout-tip collapse=\"true\"} \n# adhoc `function` \n\nWir können die Funktion auch im gleichen Zug wie `map()` definieren, indem wir einfach mit `{}` die `function()` anhängen:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap(input, function(x) {\n  ... # letzter Schritt in function wird als Ergebnis ausgegeben\n})\n```\n:::\n\n\n:::\n\nDas Ergebnis ist ein `data.frame`/`tibble`, welcher in der Spalte `model` die `lm`-Objekte enthält:\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_ow\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 3\n  east  data               model \n  <chr> <list>             <list>\n1 west  <tibble [461 × 5]> <lm>  \n2 east  <tibble [154 × 5]> <lm>  \n```\n:::\n\n```{.r .cell-code}\nmod_ow$model[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n\nCall:\nlm(formula = \"netges ~ palter + zpsex_fct\", data = data)\n\nCoefficients:\n    (Intercept)           palter  zpsex_fctFrauen  \n        1165.84            31.32         -1120.64  \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodelsummary::modelplot(mod_ow$model,coef_omit = \"Intercept\") +\n  geom_vline(aes(xintercept = 0), linetype = 2, alpha = .5) +\n  scale_color_manual(values = c(\"orange\",\"navy\")) \n```\n\n::: {.cell-output-display}\n![](12_apply_loop_files/figure-html/unnamed-chunk-14-1.png){width=384}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodelsummary(mod_ow$model,stars = T,gof_omit = \"IC|RM|Log\",output = \"flextable\")\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"tabwid\"><style>.cl-16c7037c{}.cl-16bcf5ee{font-family:'Arial';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-16c1c006{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-16c1de88{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-16c1de9c{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-16c1de9d{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-16c1de9e{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-16c1dea6{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-16c7037c'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-16c1de88\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\"> </span></p></th><th class=\"cl-16c1de88\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">(1)</span></p></th><th class=\"cl-16c1de88\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">(2)</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16c1de9c\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">(Intercept)</span></p></td><td class=\"cl-16c1de9c\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">1165.837</span></p></td><td class=\"cl-16c1de9c\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">1851.896***</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16c1de9c\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\"></span></p></td><td class=\"cl-16c1de9c\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">(797.408)</span></p></td><td class=\"cl-16c1de9c\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">(237.250)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16c1de9c\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">palter</span></p></td><td class=\"cl-16c1de9c\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">31.321+</span></p></td><td class=\"cl-16c1de9c\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">-2.365</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16c1de9c\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\"></span></p></td><td class=\"cl-16c1de9c\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">(17.011)</span></p></td><td class=\"cl-16c1de9c\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">(5.292)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16c1de9c\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">zpsex_fctFrauen</span></p></td><td class=\"cl-16c1de9c\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">-1120.636**</span></p></td><td class=\"cl-16c1de9c\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">-365.447**</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16c1de9c\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\"></span></p></td><td class=\"cl-16c1de9c\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">(384.553)</span></p></td><td class=\"cl-16c1de9c\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">(118.832)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16c1de9d\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">Num.Obs.</span></p></td><td class=\"cl-16c1de9d\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">461</span></p></td><td class=\"cl-16c1de9d\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">154</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16c1de9c\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">R2</span></p></td><td class=\"cl-16c1de9c\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">0.024</span></p></td><td class=\"cl-16c1de9c\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">0.062</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-16c1de9e\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">R2 Adj.</span></p></td><td class=\"cl-16c1de9e\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">0.019</span></p></td><td class=\"cl-16c1de9e\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">0.050</span></p></td></tr></tbody><tfoot><tr style=\"overflow-wrap:break-word;\"><td  colspan=\"3\"class=\"cl-16c1dea6\"><p class=\"cl-16c1c006\"><span class=\"cl-16bcf5ee\">+ p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001</span></p></td></tr></tfoot></table></div>\n```\n:::\n:::\n\n\n### [Übung](#manydata) {#ue12_02) \n\n<!-- ## `if` und mehrere Argumente in `function()` -->\n\n<!-- Wir können unsere `function()` auch weitere Argumente aufnehmen und auch `if`-Statements[^else] einbauen.  -->\n\n<!-- [^else]: auch `else` ist möglich -->\n\n<!-- Wir könnten beispielsweise noch einen zusätzlichen Schritt in unsere Modell-`function()` einbauen, welcher `tidy()` auf das Modell anwendet und eine vereinfachte Regressionstabelle als `data.frame` erstellt. -->\n\n<!-- ```{r} -->\n<!-- mod_function2 <- function(modx){ -->\n<!--   mx <- lm(formula = modx,data = pend12) -->\n<!--   mx <- tidy(mx,conf.int = T) -->\n<!--   return(mx) -->\n<!-- } -->\n<!-- mod_function2(\"netges ~ azges1\") -->\n<!-- ``` -->\n<!-- Wenn wir jetzt über ein zweites Argument bestimmen wollen, ob der Schritt mit `tidy()` ausgeführt werden soll, hilft uns ein zweites Argument in `function()`: -->\n\n<!-- ```{r} -->\n<!-- mod_function3 <- function(modx, dotidy){ -->\n<!--   mx <- lm(formula = modx,data = pend12) -->\n<!--   if(dotidy == T) mx <- tidy(mx,conf.int = T) -->\n<!--   return(mx) -->\n<!-- } -->\n<!-- mod_function3(\"netges ~ azges1\",dotidy=T) -->\n<!-- mod_function3(\"netges ~ azges1\",dotidy=F) -->\n<!-- ``` -->\n\n\n<!-- Wenn wir einen Standardwert für ein Argument vergeben möchten, dann können wir das mit `=` angeben. -->\n\n<!-- ```{r ifelse_default} -->\n<!-- mod_function4 <- function(modx, dotidy = T){ -->\n<!--   mx <- lm(formula = modx,data = pend12) -->\n<!--   if(dotidy == T) mx <- tidy(mx,conf.int = T) -->\n<!--   return(mx) -->\n<!-- } -->\n<!-- mod_function4(\"netges ~ azges1\") -->\n<!-- mod_function4(\"netges ~ azges1\",dotidy=F) -->\n<!-- ``` -->\n\n\n\n<!-- ## List zu `data.frame` -->\n\n\n\n<!-- Wenn die Einzelbestandteile einer `list` in einen `data.frame` umwandeln, können wir die `data.frame`s mit `bind_rows()` diese zu einem `data.frame` zusammenfügen. -->\n<!-- Mit `.id=\"\"` können wir eine Variable erstellen, welche die Listennamen enthält: -->\n<!-- ```{r} -->\n<!-- mod_l4 <- map(mdls,mod_function4) -->\n<!-- mod_l4$`Modell 1` -->\n<!-- map(mod_l4,class) -->\n<!-- ``` -->\n\n\n<!-- ```{r} -->\n<!-- #| eval: false -->\n<!-- bind_rows(mod_l4,.id=\"Mod_name\") -->\n<!-- # oder in einem Schritt: -->\n<!-- map(mdls,mod_function4) %>% bind_rows(.id=\"Mod_name\") -->\n<!-- # mit map_dfr() aus {purrr} in einem Schritt -->\n<!-- map_dfr(mdls,mod_function4,.id=\"Mod_name\") -->\n<!-- ``` -->\n\n\n<!-- ```{r} -->\n<!-- #| echo: false -->\n<!-- bind_rows(mod_l4,.id=\"Mod_name\") %>%  -->\n<!--   rmarkdown::paged_table() -->\n<!-- ``` -->\n\n\n\n## Übungen\n\n\n::: {.cell}\n\n```{.r .cell-code}\npend_ue12 <- \n  haven::read_dta(\"./orig/PENDDAT_cf_W13.dta\",\n                  col_select = c(\"pnr\",\"welle\",\"zpsex\",\"netges\",\"schul2\",\"bilzeit\",\"azges1\",\"palter\") ) %>% \n  filter(netges > 0, schul2 %in% 2:7, palter > 0, bilzeit > 0, azges1 > 0 , welle == 13) %>% \n  mutate(\n    across(matches(\"palter|netges|azges1|bilzeit\"),~as.numeric(.x)),\n    schul2_fct = factor(schul2,levels = 2:7, labels = c(\"ohne\",\"Förderschule\",\"Hauptschule\",\"Mittlere Reife\",\"FOS/BOS\",\"Abi\")),\n    zpsex_fct = factor(zpsex,levels = 1:2,labels =c(\"Männer\",\"Frauen\")))\n```\n:::\n\n\n\n### Übung 1 {#manyplots}\n\n\n+ Erstellen Sie einen Scatterplot für die Variablen `bilzeit` und `palter`\n\n[Zurück nach oben](#ue12_00)\n\n### Übung 2 {#manymod}\n\n+ Erstellen Sie eine Funktion, welche den `data.frame` `etb_ue12` für ein `lm()` verwendet und als Input eine Modellformel verwendet. Testen Sie Ihre Funktion mit folgender Formel:   \n`azges1 ~ zpsex_fct + ausb + palter` (Denken Sie daran, die Formula in `\"\"` zu setzen).\n\n+ Erstellen Sie eine Liste mit folgenden Modellen:\n    +  Modell 1 `\"azges1 ~ zpsex_fct\",`\n    +  Modell 2 `\"azges1 ~ zpsex_fct + schul2_fct\",`\n    +  Modell 3 `\"azges1 ~ zpsex_fct + schul2_fct + palter\"`\n\n+ Verwenden Sie `map()` und die erstellte Funktion, um die Modelle zu schätzen und in `modelsummary()` anzuzeigen\n\n[Zurück nach oben](#ue12_01)\n\n### Übung 3 {#manydata}\n\nBerechnen Sie das Modell `\"azges1 ~ schul2_fct + palter + I(palter^2)\"` getrennt für Männer und Frauen (`zpsex_fct`).\n\n[Zurück nach oben](#ue12_02)\n\n**[Mehr zu `map()`](https://hendrikvanb.gitlab.io/slides/purrr_beyond_map.html)**\n\n##  Anhang \n\n### `.x` in `map()`\n\nIm `{tidyverse}` stellt das Paket `{purrr}` `map()` zur Verfügung, das `function(x) { ... x}` auf  `~` und `.x` abkürzen lässt:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmods <- map(mdls,~lm(formula = .x,data = pend12))\n```\n:::\n\n\nWer mehr über `{purrr}` und `map()` erfahren möchte, findet [hier](https://hendrikvanb.gitlab.io/slides/purrr_beyond_map.html#1) eine hervorragende Einführung. \n\n\n### weitere Beispiele für `function()`   \n\n#### alle Datensätze aus einem Verzeichnis einzulesen\n\n::: {.cell}\n\n```{.r .cell-code}\n# Namen aller csv-Dateien aus einem Verzeichnis\nfiles <- list.files(path = \"/pfad/...\", pattern = \".csv$\",full.names = T)\n\ndaten_list <- \n  map(files, function(x){\n    read.csv(x,header = T,sep = \";\")\n  })\n```\n:::\n\n\n### Loop mit `for`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(i in 1:8){\n  print(i)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n[1] 6\n[1] 7\n[1] 8\n```\n:::\n:::\n\n\n### loop über Variablen\n\nMöchten wir über Variablen loopen, müssen wir R explizit mitteilen, dass die mitgegebenen strings als Variablen zu verstehen sind: \n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(v in c(\"schul2_fct\",\"zpsex_fct\",\"statakt_fct\")){\n  pend12 %>% count(v) %>% print()\n}\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in `count()`:\n! Must group by variables found in `.data`.\n✖ Column `v` is not found.\n```\n:::\n:::\n\n\nDas können wir mit `!!rlang::sym(v)`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(v in c(\"schul2_fct\",\"zpsex_fct\",\"statakt_fct\")){\n  pend12 %>% count(!!rlang::sym(v)) %>% print()\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n  schul2_fct         n\n  <fct>          <int>\n1 ohne              25\n2 Förderschule       2\n3 Hauptschule       98\n4 Mittlere Reife   228\n5 FOS/BOS           51\n6 Abi              211\n# A tibble: 2 × 2\n  zpsex_fct     n\n  <fct>     <int>\n1 Männer      314\n2 Frauen      301\n# A tibble: 3 × 2\n  statakt_fct       n\n  <fct>         <int>\n1 erbwerbstätig   609\n2 arbeitslos        2\n3 inaktiv           4\n```\n:::\n:::\n",
    "supporting": [
      "12_apply_loop_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/tabwid-1.1.3/tabwid.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/tabwid-1.1.3/tabwid.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}