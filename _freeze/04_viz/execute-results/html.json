{
  "hash": "e306ea5dc1238856d5fa8dc2caba4951",
  "result": {
    "markdown": "# Visualisierung mit `{ggplot2}`\n\n\n\n\n\n\nNeben Kennzahlen/Tabellen können/sollten Verteilungen auch visualisiert werden. \nDafür bietet `{ggplot2}` eine riesige Auswahl an Möglichkeiten. \n\n`{ggplot2}` ist Teil des `{tidyverse}`, d.h. wir können entweder nur `{ggplot2}` oder die gesamte `{tidyverse}`-Sammlung laden:\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-1_70560bddd17c521258902b1cd10626ef'}\n\n```{.r .cell-code}\nlibrary(haven) # für datenimport\nlibrary(tidyverse)\n# library(ggplot2) # nicht nötig wenn tidyverse geladen\n```\n:::\n\n\n\nZunächst sehen wir uns den Weg zu einem Scatterplot an:\n\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-2_b3767e93b2b7f5b58b9850c1b613b2f6'}\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-2-1.png){fig-align='center' width=80% height=80%}\n:::\n:::\n\n\nDatengrundlage für unsere Graphik ist die pend mit den Angaben zur Arbeitszeit sowie dem Geschlecht und Alter der Befragten:\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-3_4d3d28fba677a4ef16acc8120252fe2b'}\n\n```{.r .cell-code}\nlibrary(haven)\npend <- read_dta(\"./orig/PENDDAT_cf_W13.dta\")\n```\n:::\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-4_4df94a3a6f298613b60f61533871c1d6'}\n\n```{.r .cell-code}\npend %>% select(azges1,zpsex,palter) %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  azges1                           zpsex         palter   \n  <dbl+lbl>                        <dbl+lbl>     <dbl+lbl>\n1 -9 [Item in Welle nicht erhoben] 2 [Weiblich]  36       \n2 -9 [Item in Welle nicht erhoben] 1 [Maennlich] 39       \n3 -3 [Trifft nicht zu (Filter)]    2 [Weiblich]  38       \n4 -9 [Item in Welle nicht erhoben] 1 [Maennlich] 66       \n5 -9 [Item in Welle nicht erhoben] 2 [Weiblich]  61       \n6 -3 [Trifft nicht zu (Filter)]    2 [Weiblich]  62       \n```\n:::\n:::\n\n\nUm die Grafik nicht zu groß zu machen, verwenden wir nur die Beobachtungen aus Welle 13:\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-5_5de5d2aa7d737e15ca055932ce3df4fe'}\n\n```{.r .cell-code}\n# missings mit NA überschreiben (wir sehen später noch in Kap6 wie das schneller geht)\npend$palter[pend$palter>100] <- NA \npend$casmin[pend$casmin<0] <- NA\npend$PAS0100[pend$PAS0100<0] <- NA\npend$azges1[pend$azges1<0] <- NA\n\npend_small <- pend %>% filter(welle==13)\n```\n:::\n\n\n\n## ggplot2 und die grammar of graphics \n\n`ggplot2` ist die Umsetzung des Konzepts der \"layered grammar of graphics\" in R. Die Idee dieses Visualisierungssystems ist es, Datenvisualisierung in Parameter zu unterteilen: der zugrundeliegende Datensatz, die darzustellenden Variablen, die Wahl der darzustellenden Formen, das Koordinatensystem, Skalen und statistische Transformationen. Ein Standardbefehl in `ggplot2` sieht ungefähr so aus:\n\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-6_fe71e911d69ffcffef02b9e442f00fc5'}\n\n```{.r .cell-code}\nggplot(data = datensatz, aes(x = var1, y = var2, color = var3)) +\n  geom_point() +\n  labs(title= \"Titel\", subtitle = \"Untertitel\") +\n  theme_minimal()\n```\n:::\n\nWir rufen also zunächst mit `ggplot()` eine Darstellung auf. In den weiteren Argumenten werden dann weitere Aspekte festgelegt:  \n\n+ Mit `data = ` geben wir den `data.frame` an, den wir darstellen möchten\n+ Die Aesthetics `aes()` legen fest, welche Variablen dargestellt werden sollen: hier also `var1` auf der x-Achse, `var2` auf der y-Achse und `var3` soll die Farbgebung festlegen\n+ Die Layers `geom_..` geben die Art der Darstellung an, zB. `geom_point()` für Punkt- und `geom_bar()` für Säulendiagramme.\n+ Mit `labs` können wir Beschriftungen angeben, zB. einen Titel vergeben oder die Achsenbeschriftungen anpassen\n+ Die Themes `theme_...` legen das Design der Graphik fest, zB. schwarz/weiße Achsen- und Hintergrundfarben mit  `theme_bw()`\n\nWir arbeiten uns also jetzt durch die einzelnen *layer*/Schichten der Grafik:\n\n### `data =`\n\nIn `data = ` geben die den `data.frame` an, aus dem die darzustellenden Informationen kommen. Wir starten unseren ggplot also mit:\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-7_a7c0e79a6a4a36f61c04246dc35436e1'}\n\n```{.r .cell-code}\nggplot(data = pend_small)\n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n### `aes` \n\nDiese Werte wollen wir also in einem Scatterplot darstellen, sodass das Alter auf der x-Achse und auf der y-Achse die Wochenarbeitszeit abgetragen ist:\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-8_60b3696e88b9c2b00f8b83e2108c3844'}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = palter, y = azges1))\n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-8-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n### `geom`\nWenn wir nur diese Angaben machen, bekommen wir lediglich ein leeres Koordinatensystem - warum? Weil wir noch nicht angegeben haben, welche *Form* der Darstellung wir gerne möchten. Dazu muss wir ein `geom_` angeben, für Säulendiagramme ist das `geom_col()`, diese hängen wir an den `ggplot`-Befehl mit `+` an:\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-9_7250e84ac3ba0bcb402bfb90cc2f67e6'}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = palter, y = azges1)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-9-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\nMit `color =` können wir den Punkten auch eine andere Farbe geben:\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-10_77d03e617c69b4637d541d42c98f501c'}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = palter, y = azges1)) + geom_point(color = \"orange\")\n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-10-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n[Hier](http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf) findet sich eine Übersicht mit allen Farbnamen, die verstanden werden, es gibt aber noch viel mehr Farben - siehe [Anhang](#farben).\n\n### `aes()` Teil II\nDas sieht soweit schon ganz gut aus, allerdings werden die Punkte noch nicht getrennt nach Geschlecht dargestellt. \nDazu müssen wir die Geschlechtsangabe (`zpsex`) in `aes()` angeben.\nNeben den Achsen werden in `aes()` nämlich auch die Variablen für das Aussehen der `geom_`s angeben - das kann neben der Farbe auch die Form, Größe oder Transparenz sein. [Hier ein Überblick](#aes_list)\n\nDas Geschlecht soll die Färbung der Punkte vorgeben, diese können wir in `aes` mit `color` angeben:\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-11_d59508488515dc7d59f9487d01fccde7'}\n\n```{.r .cell-code}\n# ergibt einen Fehler aufgrund der Labels:\nggplot(data = pend_small, aes(x = palter, y = azges1, color = zpsex )) + \n  geom_point()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in UseMethod(\"rescale\"): nicht anwendbare Methode für 'rescale' auf Objekt der Klasse \"c('haven_labelled', 'vctrs_vctr', 'double')\" angewendet\n```\n:::\n:::\n\n\nEine numerische Variable für `color =` ergibt einen Farbverlauf, eine `factor`/`character`-Variable ergibt eine diskrete Farbskala:\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-12_04a98f14b04d0929cad916e611c07750'}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = palter, y = azges1, color = as.numeric(zpsex))) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-12-1.png){fig-align='center' width=65% height=65%}\n:::\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = palter, y = azges1, color = as.factor(zpsex))) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-12-2.png){fig-align='center' width=65% height=65%}\n:::\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = palter, y = azges1, color = as.character(zpsex))) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-12-3.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\nAußerdem können wir mit `scale_color_manual`[^2] selbst Farben angeben, eine Liste möglicher Farben findet sich [**hier**](http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf).\n\n[^2]: Hätten wir `color` in `aes`  angeben, wäre der entsprechende Befehl `scale_color_manual`.\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-13_f021637cf84fa448377d18f100de7a35'}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = palter, y = azges1, color = as.factor(zpsex))) + \n  geom_point() + \n  scale_color_manual(values = c(\"lightskyblue4\",\"navy\"))\n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-13-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n### Beschriftungen\n\nWir können mit den Optionen `breaks` und `labels` zudem auch die Beschriftung der Legende bearbeiten. Dazu geben wir zunächst in `breaks`  die Ausprägungen der Variable Geschlecht an und dann in der gleichen Reihenfolge die zu vergebenden Labels:\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-14_84b4dced2ba35811c87238e6b24eede9'}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = palter, y = azges1, color = as.factor(zpsex))) + \n  geom_point() + \n  scale_color_manual(values = c(\"lightskyblue4\",\"navy\"),\n                    breaks = c(1,2), labels = c(\"Männer\", \"Frauen\") )\n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-14-1.png){fig-align='center' width=75% height=75%}\n:::\n:::\n\nAbschließend passen wir dann noch mit `labs` die Beschriftungen an, dabei haben wir folgende Optionen:\n\n+ `title`: Überschrift für die Graphik\n+ `subtitle`:  Unterzeile zur Überschrift\n+ `caption`: Anmerkung unterhalb der Graphik\n+ `x`: x-Achsenbeschriftung\n+ `y`: y-Achsenbeschriftung\n+ `fill`: Beschriftung für die Legende, wenn `fill` in `aes()` angegeben wurde\n+ `color`: Beschriftung für die Legende, wenn `color` in `aes()` angegeben wurde\n\n\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/fullplt_4203fb51bd1f3fdf84fa196b1af2a071'}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = palter, y = azges1, color = as.factor(zpsex))) + \n  geom_point() + \n  scale_color_manual(values = c(\"lightskyblue4\",\"navy\"),\n                    breaks = c(1,2), labels = c(\"Männer\", \"Frauen\") ) +\n  labs(color = \"Geschlecht\", y = \"Arbeitszeit/Woche\",\n       x = \"Alter\",\n       title = \"Arbeitszeit und Alter\",\n       subtitle = \"Nach Geschlecht\",\n       caption = \"Quelle: ETB 2018\"\n       ) \n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/fullplt-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\nAußerdem können wir mit `theme_` ein anderes Design auswählen, zB. mit `theme_minimal()` einen weißen Hintergrund mit grauen Markierungslinien (weitere Beispiele in den Hinweisen unter [Themes](#themes))\n\n## Kombination aus allem\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/fllplt1_c248e8f4dcaf860c53b2f3240234f76b'}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = palter, y = azges1, \n                               shape = as.factor(zpsex),\n                               color = as_factor(PAS0100))) + \n  geom_point(size = 2) + \n  scale_color_manual(values = c(\"#007ACF\",\"navy\",\"lightskyblue\",\"orange\") ) +\n  scale_shape_manual(values = c(18,20),\n                    breaks = c(1,2), labels = c(\"Männer\", \"Frauen\")\n                     ) +\n  labs(color = \"\", \n       fill = \"\",\n       shape = \"Geschlecht\",\n       y = \"Arbeitszeit/Woche\",\n       x = \"Alter\",\n       title = \"Arbeitszeit und Alter\",\n       subtitle = \"Nach Geschlecht\",\n       caption = \"Quelle: PASS CF 0619\"\n       ) \n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/fllplt1-1.png){fig-align='center' width=100% height=60%}\n:::\n:::\n\n\n[Übersicht zu shapes](#shape1)\n\n## Grafiken speichern: `ggsave()`\n\nUm eine Grafik dann zu speichern, steht uns `ggsave()` zur Verfügung.\nWenn wir nichts anderes angeben, wird automatisch die gerade offene Grafik[^plotopen] gespeichert. \nBesser ist es aber explizit zu sein und die gewünschte Grafik als Objekt abzulegen und dann in `ggsave()` anzugeben:\n\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-15_a7796f5566a81c949e4d159cf006d770'}\n\n```{.r .cell-code}\nplot_objekt1 <- \n  ggplot(data = pend_small, aes(x = palter, y = azges1, \n                               shape = as.factor(zpsex),\n                               color = as_factor(PAS0100))) + \n  geom_point(size = 2) + \n  scale_color_manual(values = c(\"lightskyblue\",\"#007ACF\",\"navy\",\"orange\") ) +\n  scale_shape_manual(values = c(18,20),\n                    breaks = c(1,2), labels = c(\"Männer\", \"Frauen\")\n                     ) +\n  labs(color = \"\", \n       fill = \"\",\n       shape = \"Geschlecht\",\n       y = \"Arbeitszeit/Woche\",\n       x = \"Alter\",\n       title = \"Arbeitszeit und Alter\",\n       subtitle = \"Nach Geschlecht\",\n       caption = \"Quelle: PASS CF 0619\"\n       ) \n```\n:::\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-16_b43f098be992530e4d4cb970a181243b'}\n\n```{.r .cell-code}\nggsave(plot = plot_objekt1,\n       filename = \"./results/plot1.png\",\n       dpi = 800, # auflösung\n       width = 25, height = 11, units = \"cm\" # falls angepasst werden soll\n       )\n```\n:::\n\nDie richtige Kombination aus Auflösung, Textgröße und Gesamtgröße des Plots zu finden hat einige Fallstricke. [Hier mehr dazu.](https://www.tidyverse.org/blog/2020/08/taking-control-of-plot-scaling/)\n\n\n[^plotopen]: im Panel **Plots** rechts\n\n### [Übung](#pltue1)  {#ue4_01}\n\n## Verteilungen visualisieren\n\n### Boxplot \n\nDefinition der Bestandteile eines Boxplots: \n\n<!-- + ggf. Ausreißer -->\n<!-- + unterer Whisker: `q1 - 1.5* IQR` -->\n<!-- + untere Grenze: 1. Quartil  -->\n<!-- + mittlere Linie: Median  -->\n<!-- + obere Grenze: 3. Quartil  -->\n<!-- + oberer Whisker: `q3 + 1.5* IQR` -->\n<!-- + ggf. Ausreißer -->\n\n<!-- Die Box enthält also die zentralen 50% des Wertebereichs. -->\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/sw05_boxplot1_84ddc35db1fc5b557a0dfd8db0cee4cb'}\n::: {.cell-output-display}\n![](04_viz_files/figure-html/sw05_boxplot1-1.png){fig-align='center' width=55% height=45%}\n:::\n:::\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-17_62e7f66885156262158dfc45c9e3c481'}\n\n:::\n\n\nMit der folgenden Syntax können wir mit `ggplot2` einen Boxplot erstellen. Da wir nur eine Variable betrachten, müssen wir lediglich `y = ` oder `x =` angeben - je nachdem ob die Box vertikal oder horizontal orientiert sein soll.\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-18_32b42bd921bebbd9bfa66a4babf4602f'}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(y = azges1)) + geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-18-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\nSo können wir einen Boxplot erstellen, der die Werte für Männer und Frauen getrennt darstellt: \n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-19_d3653cda61d66ce9db49ed613067e6aa'}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(y = azges1, x = factor(zpsex))) + geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-19-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n### Histogram \n\nEbenso können Verteilungen mit einem Histogramm beschrieben werden:\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-20_d0dc2f00bad44c4dc544f5e107da70cf'}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = azges1)) + \n  geom_histogram()  \n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-20-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\nWenn wir hier die Farbe ändern möchten, dann ist `fill =` anstelle von `color =` die richtige Option:\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-21_74f2674c795853c1fecec04cbe42966c'}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = azges1)) + \n  geom_histogram(fill = \"sienna1\")  \n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-21-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\nMöchten wir das Histogramm nach Geschlecht aufsplitten, können wir auch hier wieder `fill` als Aesthetic angeben. Mit `position = position_dodge()` können wir die Balken nebeneinander stellen lassen:\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\" hash='04_viz_cache/html/hist0_582be15bb818559a69478db236c7c09c'}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = azges1, fill = factor(zpsex))) + \n  geom_histogram() \n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/hist0-1.png){fig-align='center' width=65% height=65%}\n:::\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = azges1, fill = factor(zpsex))) + \n  geom_histogram(position = position_dodge()) \n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/hist0-2.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\nAuch hier funktionieren natürlich wieder die `scale_...manual` Befehle, allerdings hier als `scale_fill_manual` anstelle `scale_color_manual` von oben:\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/hist1_0d9044a10f9e5d8ce00e9168c7e83338'}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = azges1, fill = factor(zpsex))) + \n  geom_histogram(position = position_dodge()) +\n  scale_fill_manual(values = c(\"sienna1\",\"dodgerblue4\"),\n                    breaks = 1:2, labels = c(\"Männer\",\"Frauen\")) +\n  labs(fill = \"Geschlecht\")\n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/hist1-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n### [Übung](#pltue2) {#ue4_02}\n\n## Kategoriale Merkmale \n\nIm Folgenden sehen wir uns eine Möglichkeit an, die Kontingenztabelle aus [Kapitel 2](03_desc.qmd#crosscount) zu visualisieren:\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-22_d40bae2fd8879a686f4fa4ff0ce90278'}\n\n```{.r .cell-code}\npend_small$PD0400[pend_small$PD0400<0] <- NA # missings ausschließen\npend_small %>% \n  count(zpsex,PD0400) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 3\n   zpsex         PD0400                              n\n   <dbl+lbl>     <dbl+lbl>                       <int>\n 1 1 [Maennlich]  1 [Ueberhaupt nicht religioes]    40\n 2 1 [Maennlich]  2 [Eher nicht religioes]          41\n 3 1 [Maennlich]  3 [Eher religioes]                49\n 4 1 [Maennlich]  4 [Sehr religioes]                22\n 5 1 [Maennlich] NA                                780\n 6 2 [Weiblich]   1 [Ueberhaupt nicht religioes]    26\n 7 2 [Weiblich]   2 [Eher nicht religioes]          34\n 8 2 [Weiblich]   3 [Eher religioes]                40\n 9 2 [Weiblich]   4 [Sehr religioes]                16\n10 2 [Weiblich]  NA                                816\n```\n:::\n:::\n\n\nMit `geom_bar()` können wir Säulen darstellen, indem wir `..count..` für y die Höhe als Anzahl der Beobachtungen festlegen:\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/barcount_1e8a4c0e3981e9846ac5f5f107021d60'}\n\n```{.r .cell-code}\npend_small %>% \n  filter(!is.na(PD0400)) %>% \n  ggplot(data = ., aes(x = as_factor(PD0400), fill = factor(zpsex),\n                       y = ..count..)) +\n  geom_bar(position=position_dodge()) \n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/barcount-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\nWie kommen wir jetzt an die relativen Häufigkeiten? Wir passen unsere `aes` auf `y = (..count..)/sum(..count..)` an.\nMit `scale_y_continuous(labels = scales::label_percent(accuracy = 1)) ` können wir außerdem auf der y-Achse die Prozentwerte anzeigen lassen:\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/scalepct_50799fea8793e154c554abe27fcd149a'}\n\n```{.r .cell-code}\npend_small %>% \n  filter(!is.na(PD0400)) %>% \n  ggplot(data = ., aes(x = as_factor(PD0400), fill = factor(zpsex),\n                       y = (..count..)/sum(..count..) )) +\n  geom_bar(position=position_dodge()) +\n  scale_y_continuous(labels = scales::label_percent(accuracy = 1)) \n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/scalepct-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\nUm jetzt ein Balken- statt einem Säulendiagramm zu erhalten, tauschen wir einfach `x` und `y` sowie die Prozentbeschriftung auf `scale_x_continuous`:\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/balkenpct_91f096de981a9d84f4f03e3ca84509ba'}\n\n```{.r .cell-code}\npend_small %>% \n  filter(!is.na(PD0400)) %>% \n  ggplot(data = ., aes(y = as_factor(PD0400), fill = factor(zpsex),\n                       x = (..count..)/sum(..count..) )) +\n  geom_bar(position=position_dodge()) +\n  scale_x_continuous(labels = scales::label_percent(accuracy = 1)) \n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/balkenpct-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\nAuch diese Grafiken können wir dann wieder mit `scale_...` anpassen und mit `labs()` ausführlich labeln - alle Optionen sind konsistent über alle Darstellungsformen hinweg.\nAußerdem können wir die Kategorien mit `breaks =` und `labels =` auch selbst labeln, wenn uns die definierten Labels nicht gefallen:\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\" hash='04_viz_cache/html/fullplot_9c74759e08b9cd315e3815e9dac336e4'}\n\n```{.r .cell-code}\npend_small %>% \n  filter(!is.na(PD0400)) %>% \n  ggplot(data = ., aes(y = as_factor(PD0400), fill = factor(zpsex),\n                       x = (..count..)/sum(..count..) )) +\n  geom_bar(position=position_dodge()) +\n  scale_fill_manual(values = c(\"navajowhite\",\"navy\"),\n                    breaks = c(1,2), labels = c(\"Männer\", \"Frauen\")) +\n  scale_x_continuous(labels = scales::label_percent(accuracy = 1)) +\n  labs(title = \"Religiösität nach Geschlecht\",\n       subtitle = \"Relative Häufigkeiten\",\n       caption = \"Quelle: PASS-CF 0619\",\n       y = \"Religiösität\",\n       x = \"Relative Häufigkeit\",\n       fill = \"Geschlecht\" ) \n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/fullplot-1.png){fig-align='center' width=65% height=65%}\n:::\n\n```{.r .cell-code}\npend_small %>% \n  filter(!is.na(PD0400)) %>% \n  ggplot(data = ., aes(y = PD0400, fill = factor(zpsex),\n                       x = (..count..)/sum(..count..) )) +\n  geom_bar(position=position_dodge()) +\n  scale_fill_manual(values = c(\"navajowhite\",\"navy\"),\n                    breaks = c(1,2), labels = c(\"Männer\", \"Frauen\")) +\n  scale_x_continuous(labels = scales::label_percent(accuracy = 1)) +\n  scale_y_continuous(breaks = 1:4, \n                     labels = c(\"Überhaupt nicht\",\n                                \"Eher nicht\",\n                                \"Eher schon\",\n                                \"Sehr\")) +\n  labs(title = \"Religiösität nach Geschlecht\",\n       subtitle = \"Relative Häufigkeiten\",\n       caption = \"Quelle: PASS-CF 0619\",\n       y = \"Religiösität\",\n       x = \"Relative Häufigkeit\",\n       fill = \"Geschlecht\" ) \n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/fullplot-2.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n### [Übung](#pltue3)  {#ue4_03}\n\n## Übungen\nNutzen Sie für alle Aufgaben die ersten 150 Beobachtungen (`pend_small`), um den Plot einfach zu halten. Denken Sie daran die fehlenden Werte mit `filter()` auszuschließen, Sie können dazu diesen Befehl verwenden:\n\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-23_3ba7b78596bd1beaf16bc2456c3d0832'}\n\n```{.r .cell-code}\npend <-\n  haven::read_dta(\"./orig/PENDDAT_cf_W13.dta\",\n    col_select = c(\"zpsex\",\"welle\",\"bilzeit\",\"PA0445\",\"PG1270\",\"PEO0400c\")\n    )\n```\n:::\n\n\n\n\n### Übung 1 {#pltue1}\n\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-24_e7b91c6b544f1bb9a39178970c3863dd'}\n\n```{.r .cell-code}\npend_u41 <-\n  pend %>% \n  filter(welle == 13, bilzeit > 0, PA0445 >0) \n```\n:::\n\n\n+ Erstellen Sie einen Scatterplot für die Variablen Dauer der gesamten Arbeitslosigkeitserfahrung in Monaten (`PA0445`, y-Achse) und Dauer der Ausbildung (`bilzeit`, x-Achse). \n+ Legen Sie die Farbe so fest, dass Männer und Frauen unterschiedliche Farben gekennzeichnet werden (`zpsex`)\n+ Verändern Sie die Farben auf `goldenrod1` und `dodgerblue4` fest ([oder eine beliebige andere](http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf))\n+ Beschriften Sie die Achsen und Legende!\n\n[Zurück nach oben](#ue4_01)\n\n\n### Übung 2 {#pltue2}\n\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-25_1055a173690eb44a635c009c4e20aa41'}\n\n```{.r .cell-code}\npend_u42 <-\n  pend %>% \n  filter(welle == 9, PG1270 >0) \n```\n:::\n\n\n+ Erstellen Sie einen Boxplot oder Histogramm für die Verteilung der Anzahl gerauchter Zigaretten und Zigarillos pro Tag (i.d. letzten\nWoche) (`PG1270`).\n+ Passen Sie diese Grafik so an, dass die Verteilungen für Männer und Frauen getrennt dargestellt werden. \n+ Wie können Sie auch die Farben nach dem Geschlecht getrennt anlegen? (Denken Sie an `color =` und `fill =`) \n+ Verändern Sie die Farben der Balken mit Hilfe von `scale_fill_manual` oder `scale_fill_brewer` oder `scale_fill_viridis` (Siehe Abschnitte [Farben](#farben) und [ColorBreweR](#brewer) und [viridis](#viridis) unter \"weitere Optionen\")\n\n[Zurück nach oben](#ue4_02)\n\n### Übung 3 {#pltue3}\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-26_cd99d29ec886be90f181b6a7a36299a3'}\n\n```{.r .cell-code}\npend_u43 <-\n  pend %>% \n  filter(welle == 11, PEO0400c >0) \n```\n:::\n\n\n+ Erstellen Sie ein Säulen-Diagramm für die Antworten auf die Frage \"Eine berufstätige Mutter kann ein genauso herzliches Verhältnis zu ihren Kindern haben, wie eine Mutter, die nicht erwerbstätig ist.\" (`PEO0400c`)\n+ Erstellen Sie ein Säulen-Diagramm für d(`PEO0400c`) getrennt nach der Variable `migration`, legen Sie also die Farbe der Säulen nach `migration` fest. Die Variable `migration` erfasst, ob die Befragten einen Migrationshintergrund haben:\n\n\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-27_547e5d6ee7c96f76a248837e45ee949d'}\n::: {.cell-output-display}\n```{=html}\n<div id=\"leuveuvoeg\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>html {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#leuveuvoeg .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 11px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#leuveuvoeg .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#leuveuvoeg .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#leuveuvoeg .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#leuveuvoeg .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#leuveuvoeg .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#leuveuvoeg .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#leuveuvoeg .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#leuveuvoeg .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#leuveuvoeg .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#leuveuvoeg .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#leuveuvoeg .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#leuveuvoeg .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#leuveuvoeg .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#leuveuvoeg .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#leuveuvoeg .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#leuveuvoeg .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#leuveuvoeg .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#leuveuvoeg .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#leuveuvoeg .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#leuveuvoeg .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#leuveuvoeg .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#leuveuvoeg .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#leuveuvoeg .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#leuveuvoeg .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#leuveuvoeg .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#leuveuvoeg .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#leuveuvoeg .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#leuveuvoeg .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#leuveuvoeg .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#leuveuvoeg .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#leuveuvoeg .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#leuveuvoeg .gt_left {\n  text-align: left;\n}\n\n#leuveuvoeg .gt_center {\n  text-align: center;\n}\n\n#leuveuvoeg .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#leuveuvoeg .gt_font_normal {\n  font-weight: normal;\n}\n\n#leuveuvoeg .gt_font_bold {\n  font-weight: bold;\n}\n\n#leuveuvoeg .gt_font_italic {\n  font-style: italic;\n}\n\n#leuveuvoeg .gt_super {\n  font-size: 65%;\n}\n\n#leuveuvoeg .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 75%;\n  vertical-align: 0.4em;\n}\n\n#leuveuvoeg .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#leuveuvoeg .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#leuveuvoeg .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#leuveuvoeg .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#leuveuvoeg .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#leuveuvoeg .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\">\n  \n  <thead class=\"gt_col_headings\">\n    <tr>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Variable\">Variable</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"value\">value</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"label\">label</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Variable\" class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>PEO0400c</code></p>\n</div></td>\n<td headers=\"value\" class=\"gt_row gt_right\">1</td>\n<td headers=\"label\" class=\"gt_row gt_left\">Stimme voll und ganz zu</td></tr>\n    <tr><td headers=\"Variable\" class=\"gt_row gt_left\"><div class='gt_from_md'></div></td>\n<td headers=\"value\" class=\"gt_row gt_right\">2</td>\n<td headers=\"label\" class=\"gt_row gt_left\">Stimme eher zu</td></tr>\n    <tr><td headers=\"Variable\" class=\"gt_row gt_left\"><div class='gt_from_md'></div></td>\n<td headers=\"value\" class=\"gt_row gt_right\">3</td>\n<td headers=\"label\" class=\"gt_row gt_left\">Stimme eher nicht zu</td></tr>\n    <tr><td headers=\"Variable\" class=\"gt_row gt_left\"><div class='gt_from_md'></div></td>\n<td headers=\"value\" class=\"gt_row gt_right\">4</td>\n<td headers=\"label\" class=\"gt_row gt_left\">Stimme ueberhaupt nicht zu</td></tr>\n    <tr><td headers=\"Variable\" class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>migration</code></p>\n</div></td>\n<td headers=\"value\" class=\"gt_row gt_right\">1</td>\n<td headers=\"label\" class=\"gt_row gt_left\">Kein Migrationshintergrund</td></tr>\n    <tr><td headers=\"Variable\" class=\"gt_row gt_left\"><div class='gt_from_md'></div></td>\n<td headers=\"value\" class=\"gt_row gt_right\">2</td>\n<td headers=\"label\" class=\"gt_row gt_left\">selbst / mind. 1 Elternteil zugezogen</td></tr>\n    <tr><td headers=\"Variable\" class=\"gt_row gt_left\"><div class='gt_from_md'></div></td>\n<td headers=\"value\" class=\"gt_row gt_right\">3</td>\n<td headers=\"label\" class=\"gt_row gt_left\">Mind. 1 Elternteil zugezogen</td></tr>\n    <tr><td headers=\"Variable\" class=\"gt_row gt_left\"><div class='gt_from_md'></div></td>\n<td headers=\"value\" class=\"gt_row gt_right\">4</td>\n<td headers=\"label\" class=\"gt_row gt_left\">Mind. 1 Grosselt. zugez., Elt. in D geb.</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\n[Zurück nach oben](#ue4_03)\n\n\n## Weitere Optionen für ggplot2 \n\n### Aesthetics {#aes_list}\n\n\n::: {.cell layout-align=\"center\" fig.asp='0.3' hash='04_viz_cache/html/unnamed-chunk-28_41bd20b847e2619bdc43fdfeb016e0b0'}\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-28-1.png){fig-align='center' width=65% height=65%}\n:::\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-28-2.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n### themes {#themes} \n\nMit sog. themes können wir das layout der Grafik verändern. \nWeitere Themes sind zB: `theme_light()`, `theme_classic()` ider `theme_void()`, eine Liste findet sich [hier](https://ggplot2.tidyverse.org/reference/ggtheme.html). \nAußerdem bietet das Paket [{ggthemes}](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes) (`install.packages('ggthemes')`) eine große Auswahl.\n\n\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-29_8ead7b5b6b5d9ee94af8b0a8cff1c84a'}\n\n```{.r .cell-code}\nggplot(data = pend_small, aes(x = palter, y = azges1, color = factor(zpsex))) + \n  geom_point(size = 2) + \n  theme_minimal()\n\nggplot(data = pend_small, aes(x = palter, y = azges1, color = factor(zpsex))) + \n  geom_point(size = 2) +\n  theme_dark()\n```\n:::\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-30_7f085a7355759a13f8e873d2d6b85b2c'}\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-30-1.png){fig-align='center' width=65% height=65%}\n:::\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-30-2.png){fig-align='center' width=65% height=65%}\n:::\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-30-3.png){fig-align='center' width=65% height=65%}\n:::\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-30-4.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n### Farben {#farben}\n\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-31_3d89a22cf2df65489ba6368bc5b46896'}\n\n```{.r .cell-code}\np1 <- ggplot(data = pend_small, aes(x = palter, y = azges1, color = factor(zpsex))) + \n  geom_point(size = 3) \n```\n:::\n\n\n\nNeben den im Beispiel verwendeten Farben für `fill` können natürlich auch noch unzählige weitere Farben in `scale_fill_manual`  und `scale_color_manual` verwendet werden:\n\n+ [Hier](http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf) findet sich eine Übersicht mit allen Farbnamen, die verstanden werden\n+ Alternativ können auch sog. HEX-Codes angeben werden, die bspw. mit dem [Adobe Color Wheel](https://color.adobe.com/de/create/color-wheel) oder [Color Hex](https://www.color-hex.com/) erstellt werden können.\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-32_6a5cf70b842fd6ce1dd268458b46b7ba'}\n\n```{.r .cell-code}\np1 +  scale_color_manual(values = c(\"dodgerblue4\",\"sienna1\"),\n                    breaks = c(1,2), labels = c(\"Männer\", \"Frauen\") )\n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-32-1.png){fig-align='center' width=65% height=65%}\n:::\n\n```{.r .cell-code}\np1 +  scale_color_manual(values = c(\"#005b96\",\"#6497b1\"),\n                    breaks = c(1,2), labels = c(\"Männer\", \"Frauen\") )\n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-32-2.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n#### ColorBreweR {#brewer}\n\nAlternativ zur manuellen Auswahl der Farben mit `scale_fill_manual` und `scale_color_manual` können mit `scale_fill_brewer()` auch vorgegebene Farbpaletten des *colorbrewer* verwendet werden. Dazu muss lediglich `scale_fill_brewer()` anstelle von `scale_fill_manual` angeben werden und statt `values` eine der Paletten - eine Übersicht findet sich [hier](http://colorbrewer2.org/). Die Farbpaletten von ColorBreweR sind alle in ggplot2 integriert.\n\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-33_4808ee3d34d5201fb9b1bdbc56a3f25c'}\n\n```{.r .cell-code}\np1 +\n  scale_color_brewer(palette = \"RdYlBu\",\n                    breaks = c(1,2), labels = c(\"Männer\", \"Frauen\") ) \n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-33-1.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n#### viridis {#viridis}\n\nAnalog dazu gibt es auch die [{viridis}](https://cran.r-project.org/web/packages/viridis/vignettes/intro-to-viridis.html)-Paletten, welche durchgängig \"colorblind-safe\" und ebenfalls in {ggplot2} integriert sind. Allerdings ist hier zu beachten, dass für Farbauswahlen basierend auf einer kategorialen Variable `scale_color_viridis_d()` zu verwenden ist. Soll die Farbe entlang einer numerischen/metrischen Variable bestimmt werden, dann ist `scale_color_viridis_c()` zu verwenden. Außerdem kann mit `begin` und `end` die Breite der Farbskala angepasst werden:\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-34_7ed5eae34aa961d7acbf473866ce0889'}\n\n```{.r .cell-code}\np1 +\n  scale_color_viridis_d(option=\"magma\",\n                    breaks = c(1,2), labels = c(\"Männer\", \"Frauen\") ) \n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-34-1.png){fig-align='center' width=65% height=65%}\n:::\n\n```{.r .cell-code}\np1 +\n  scale_color_viridis_d(option=\"magma\",begin = .65,end = .85,\n                    breaks = c(1,2), labels = c(\"Männer\", \"Frauen\") ) \n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-34-2.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-35_cf7dda2fcdff1fcb28b13fe92ab9d64f'}\n::: {.cell-output-display}\n![](./pic/104_viridis-scales.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\n\n#### Weitere Farbpaletten\n\nDarüber hinaus gibt es unzählige Pakete, die ebenfalls `scale_color_` und `scale_fill_`-Funktionen bieten:\nHier noch zwei Beispiele mit  [{scico}](https://github.com/thomasp85/scico) und [{MetBrewer}](https://github.com/BlakeRMills/MetBrewer), welches Farben aus Bildern im Metropolitan Museum of Art enthält:\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-36_7216c434f55a6677b8b654a4bbbc7ad8'}\n\n```{.r .cell-code}\ninstall.packages('scico')\ninstall.packages(\"MetBrewer\")\n```\n:::\n\n\n[{scico}](https://github.com/thomasp85/scico) Farbpaletten\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-37_2d3173be436ee8c6e3f00d9b9870f50b'}\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-37-1.png){fig-align='center' width=65% height=60%}\n:::\n:::\n\n\n[{MetBrewer}](https://github.com/BlakeRMills/MetBrewer) Farbpaletten\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-38_0a5504b0fffec7df55339d3a2a92ceb8'}\n::: {.cell-output-display}\n![](./pic/104_metbrewer.png){fig-align='center' width=100% height=65%}\n:::\n:::\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-39_9257938900889db13c359491c5bc84eb'}\n\n```{.r .cell-code}\nlibrary(scico)\np1 +\n  scale_color_scico_d(palette = \"oslo\",begin = .5,end = .8,\n                    breaks = c(1,2), labels = c(\"Männer\", \"Frauen\") ) \n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-39-1.png){fig-align='center' width=65% height=65%}\n:::\n\n```{.r .cell-code}\nlibrary(MetBrewer)\np1 +\n  scale_color_met_d(name = \"Kandinsky\",\n                    breaks = c(1,2), labels = c(\"Männer\", \"Frauen\") ) \n```\n\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-39-2.png){fig-align='center' width=65% height=65%}\n:::\n:::\n\n\nVergleichbare Pakete gibt es auch für \n\n+ [{DutchMasters}](https://github.com/EdwinTh/dutchmasters) - Farbpaletten aus Bildern niederländischer Maler\n+ [{wesanderson}](https://github.com/karthik/wesanderson) - Farbpaletten basierend auf verschiedenen Filmen von Wes Anderson (The Grand Budapest Hotel usw.)\n+ [{ochRe}](https://github.com/hollylkirk/ochRe) - Farbpaletten \"inspired by Australian art, landscapes and wildlife\"\n+ [{paletteer}](https://github.com/EmilHvitfeldt/paletteer) bietet eine riesige Auswahl verschiedenster Farbpaletten\n\n\n### Shapes {#shape1}\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-40_d8b6cf815433b7b4232457ee97c35910'}\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-40-1.png){fig-align='center' width=50% height=50%}\n:::\n:::\n\n\n[**Zusätzlicher Überblick**](https://blog.albertkuo.me/post/point-shape-options-in-ggplot/)\n\n### Linetypes {#line}\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-41_cbf08ca8a770a486e449f23c986383b9'}\n::: {.cell-output-display}\n![](04_viz_files/figure-html/unnamed-chunk-41-1.png){fig-align='center' width=50% height=30%}\n:::\n:::\n\n\nÜbersicht zu Shapes und Linetypes im [R Cookbook](http://www.cookbook-r.com/Graphs/Shapes_and_line_types/)\n\n\n\n## Linksammlung\n\n+ Das [Graph Kapitel des R Cookbooks](www.cookbook-r.com/Graphs/) ist eine hervorragende Quelle für alle möglichen Optionen und eine grundlegende Übersicht - bspw. zur Anpassung der [Legende](http://www.cookbook-r.com/Graphs/Legends_(ggplot2)), [Linien- und Punktvarianten](http://www.cookbook-r.com/Graphs/Shapes_and_line_types) oder den [Achsen](http://www.cookbook-r.com/Graphs/Axes_(ggplot2))\n\n+ Schriftgröße und -farbe anpassen: [Hier](https://cmdlinetips.com/2021/05/tips-to-customize-text-color-font-size-in-ggplot2-with-element_text/) findet sich eine gute Übersicht, wie die Schriftgröße und -farbe in `{ggplot2}` angepasst werden kann.\n\n+ [From Data to Viz ](https://www.data-to-viz.com/#explore) bietet einen Entscheidungsbaum für verschiedene Zusammenhänge und Deskriptionen mit Beispiel-Syntax\n\n\n::: {.cell layout-align=\"center\" hash='04_viz_cache/html/unnamed-chunk-42_f3208ea3970d1a80b653e37fb1f01890'}\n::: {.cell-output-display}\n![](./pic/104_decision.png){fig-align='center' width=80% height=80%}\n:::\n:::\n\n\n+ Die [R Graph Gallery](https://r-graph-gallery.com/) ist noch etwas umfangreicher und bietet noch weitere Visualisierungsideen\n\n+ Für alle, die mehr zu gelungenen (und schönen) Datenvisualisierungen mit `{ggplot2}` erfahren möchten, ist das [Tutorial von Cédric Scherer](https://cedricscherer.netlify.app/2019/08/05/a-ggplot2-tutorial-for-beautiful-plotting-in-r/) ein hervorragender Einstieg. [Dieser Workshop](https://github.com/z3tt/beyond-bar-and-box-plots/blob/main/README.md#talk-resources) eignet sich sehr gut für eine Vertiefung.\n\n+ [Dieser Workshop](https://rstudio-conf-2022.github.io/ggplot2-graphic-design/) bietet weitere Einblicke wie Datenvisualisierungen mit `{ggplot2}` schöner gestaltet werden können.\n\n+ [Eine Liste von Erweiterungen für ggplot2](https://albert-rapp.de/posts/ggplot2-tips/12_a_few_gg_packages/12_a_few_gg_packages.html)\n\n+ [**Das** Buch zu {ggplot2}](https://ggplot2-book.org/index.html)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}