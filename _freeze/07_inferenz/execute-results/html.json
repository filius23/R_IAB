{
  "hash": "ec419607b50cc10dec12cae7b20c5301",
  "result": {
    "markdown": "# Inferenzstatistik & Gewichtung\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\npend_kap7 <- haven::read_dta(\"./orig/PENDDAT_cf_W13.dta\",\n                         col_select = c(\"pnr\",\"welle\",\"palter\",\"zpsex\",\"azges1\",\"statakt\")) %>% \n  mutate(across(everything(), ~ifelse(.x < 0,NA,.x)) )\n```\n:::\n\n\n\nBisher haben wir die Angaben aus unserem Datensatz immer als fix angesehen. \nZiel einer statistischen Auswertung ist aber meistens, Aussagen über die *Grundgesamtheit* oder *Population* zu treffen. \n\nFür die grundlegenden Inferenztools helfen uns im wesentlichen 3 Funktionen:\n\n+ `t.test()` zur Berechnung von t-Tests\n+ `cor.test()` zur Berechnung von Korrelationen und weiterer Zusammenhangsmaße\n+ `{survey}` zur Gewichtung\n\nNeue Pakete:\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"survey\") # Gewichtung (weiter unten)\n```\n:::\n\n\n## t-Tests\n\nEines der zentralen Werkzeuge der grundlegenden Inferenzstatistik ist der t-Test.\nIn R steht uns dafür `t.test()` zur Verfügung.\nMit der Option `mu =` können wir einen Wert für die $H_{A}$ angeben:\n\n::: {.cell}\n\n```{.r .cell-code}\nt.test(pend_kap7$azges1, mu = 35)  \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tOne Sample t-test\n\ndata:  pend_kap7$azges1\nt = -10.612, df = 8368, p-value < 2.2e-16\nalternative hypothesis: true mean is not equal to 35\n95 percent confidence interval:\n 33.57846 34.02173\nsample estimates:\nmean of x \n  33.8001 \n```\n:::\n:::\n\n\nEin weiterer typischer Anwendungsfall für t-Tests ist der Gruppenvergleich, dazu geben wir in `t.test()` die zu testende Variable und und nach einer `~`[^tilde2] die Gruppenvariable an. \nWir testen hier also auf Altersunterschiede zwischen Männern (`zpsex`=1, daher group1) und Frauen (`zpsex`=2, daher group2).\n\n[^tilde2]: Tastaturbefehle: `Alt Gr` + `*` auf Windows. Auf macOS `Alt` + `N` und anschließend ein Leerzeichen, damit die Tilde erscheint.\n\n::: {.cell}\n\n```{.r .cell-code}\nt.test(pend_kap7$azges1~pend_kap7$zpsex)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWelch Two Sample t-test\n\ndata:  pend_kap7$azges1 by pend_kap7$zpsex\nt = 36.395, df = 8318.8, p-value < 2.2e-16\nalternative hypothesis: true difference in means between group 1 and group 2 is not equal to 0\n95 percent confidence interval:\n 7.206945 8.027473\nsample estimates:\nmean in group 1 mean in group 2 \n       37.74659        30.12938 \n```\n:::\n:::\n\n\nEs hat sich als Konvention etabliert, von einem signifikanten Unterschied zu sprechen wenn die Irrtumswahrscheinlichkeit unter 5% liegt. Das bedeutet:\n\n> *Assuming that the null hypothesis is true and the study is repeated an infinite number times by drawing random samples from the same populations(s), less than 5% of these results will be more extreme than the current result.*[^1]\n\n[^1]: [Failing Grade: 89% of Introduction-to-Psychology Textbooks That Define or Explain Statistical Significance Do So Incorrectly. Advances in Methods and Practices in Psychological Science, 2515245919858072.](https://doi.org/10.1177/2515245919858072)\n\nDa hier der p-Wert sehr viel kleiner ist als 0.05 ist (`p-value < 2.2e-16`)[^ehoch], können wir von einen statistisch signifikanten Unterschied sprechen.  \n\n[^ehoch]: `2.2e-16` steht für 2.2 aber mit 16 Nullen vorweg. Das ist Rs Art zu sagen, dass der Wert sehr sehr klein ist.\n\nStandardmäßig bekommen wir einen beidseitigen Test (`\"two.sided\"`), wir können aber auch einen links- (`\"less\"`) oder rechtsseitigen (`\"greater\"`) Test anfordern [mehr dazu](#hypt):\n\n::: {.cell}\n\n```{.r .cell-code}\nt.test(pend_kap7$palter~pend_kap7$zpsex,alternative = \"two.sided\")\nt.test(pend_kap7$palter~pend_kap7$zpsex,alternative = \"less\")\nt.test(pend_kap7$palter~pend_kap7$zpsex,alternative = \"greater\")\n```\n:::\n\n\n<!-- https://github.com/gergness/srvyr/ -->\n<!-- https://federicovegetti.github.io/teaching/heidelberg_2018/lab/sst_lab_day2.html -->\n<!-- http://people.ku.edu/~chkim/soc910/note/Soc910_Note_04_Weight.pdf -->\n\n\n## Korrelation {#pearson}\n\nDen Korrelationskoeffizienten können wir in R mit `cor.test()` berechnen:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor.test(pend_kap7$palter,pend_kap7$azges1,method = \"pearson\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  pend_kap7$palter and pend_kap7$azges1\nt = -3.8563, df = 8367, p-value = 0.000116\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.06348945 -0.02071526\nsample estimates:\n        cor \n-0.04212165 \n```\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\nEs handelt sich mit -0.0421 also um einen geringen Zusammenhang. Der p-Wert gibt uns auch hier wieder Auskunft über die stat. Signifikanz: mit 0.00012 liegt der p-Wert deutlich unter 0,05.\n\nFür den Spearman-Rangkorrelationskoeffizienten können wir `method = \"spearman\"` nutzen:\n\n::: {.cell}\n\n```{.r .cell-code}\ncor.test(pend_kap7$palter,pend_kap7$azges1,method = \"spearman\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tSpearman's rank correlation rho\n\ndata:  pend_kap7$palter and pend_kap7$azges1\nS = 1.0003e+11, p-value = 0.02845\nalternative hypothesis: true rho is not equal to 0\nsample estimates:\n        rho \n-0.02394976 \n```\n:::\n:::\n\n\n### [Übung](#ttestue)\n\n## Gewichtung \n\n\n> Bei der Datenanalyse ist man oft mit einer Stichprobe aus einer größeren Population konfrontiert und man möchte aus dieser Stichprobe Rückschlüsse auf die größere Population ziehen. Die meisten statistischen Verfahren für diese sog. „Inferenzstatistik“ beruhen dabei auf der Annahme, dass die Stichprobe eine einfache Zufallsstichprobe ist. Bei einer solchen Stichprobe gelangen alle Elemente der Grundgesamtheit mit der gleichen Wahrscheinlichkeit in die Stichprobe. In der Praxis sind solche Stichproben aber die große Ausnahme. Häufig haben bestimmte Gruppen von Personen höhere Auswahlwahrscheinlichkeiten als andere. [Kohler/Kreuter, S.81](https://doi.org/10.1515/9783110469509)\n\nGewichte sind ein häufig verwendetes Mittel, ungleich verteilten Auswahlwahrscheinlichkeiten zu begegnen. \nDie Gewichte für den Personendatz des PASS CampusFiles sind im Datensatz `pweights_cf_W13.dta` zu finden. Für eine Gewichtung müssen wir diesen erst an die Personendatei ranspielen - mit einem [`left_join()`](#wrang3#join)\n\n::: {.cell}\n\n```{.r .cell-code}\nwgt_df <- haven::read_dta(\"./orig/pweights_cf_W13.dta\")\nhead(wgt_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 7\n         pnr welle                   sample             wqp ppbleib   psu strpsu\n       <dbl> <dbl+lbl>               <dbl+lbl>        <dbl>   <dbl> <dbl>  <dbl>\n1 1000001901 1 [Welle 1 (2006/2007)] 2 [Microm-Stic… 20075.   NA       80     64\n2 1000001901 3 [Welle 3 (2008/2009)] 2 [Microm-Stic… 32959.   NA       80     64\n3 1000001902 1 [Welle 1 (2006/2007)] 2 [Microm-Stic… 23077.   NA       80     64\n4 1000002001 1 [Welle 1 (2006/2007)] 1 [BA-Stichpro…  1639.    1.87    80     64\n5 1000002001 2 [Welle 2 (2007/2008)] 1 [BA-Stichpro…  1668.    1.12    80     64\n6 1000002001 3 [Welle 3 (2008/2009)] 1 [BA-Stichpro…  1748.    1.36    80     64\n```\n:::\n\n```{.r .cell-code}\npend_kap7w <- pend_kap7 %>% left_join(wgt_df, by = join_by(pnr,welle))\n```\n:::\n\n\n\nDie einfachste Variante für eine Gewichtung ist die Option  `wt=` in `count()`:\n\n::: {.cell}\n\n```{.r .cell-code}\npend_kap7w %>% \n  count(zpsex,statakt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 3\n  zpsex statakt     n\n  <dbl>   <dbl> <int>\n1     1       1  4685\n2     1       2  3240\n3     1       3  2047\n4     1      NA  3555\n5     2       1  4785\n6     2       2  2899\n7     2       3  3434\n8     2      NA  3779\n```\n:::\n\n```{.r .cell-code}\npend_kap7w %>% \n  count(zpsex,statakt,wt = wqp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 3\n  zpsex statakt          n\n  <dbl>   <dbl>      <dbl>\n1     1       1 206326062.\n2     1       2  26678834.\n3     1       3  64867832.\n4     1      NA 143378863.\n5     2       1 177223245.\n6     2       2  21205451.\n7     2       3 109600208.\n8     2      NA 163820124.\n```\n:::\n:::\n\n\nFür umfangreichere Anwendungen stehen in R stehen die Pakete [`{survey}`](https://stylizeddata.com/how-to-use-survey-weights-in-r/) und das darauf aufbauende [`{srvyr}`](https://cran.r-project.org/web/packages/srvyr/vignettes/srvyr-vs-survey.html) zur Verfügung.\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"survey\")\n```\n:::\n\n\n\nZunächst verwenden wir `svydesign()`, um die Gewichtung festzulegen. \nIm weiteren stellt [`{survey}`](https://stylizeddata.com/how-to-use-survey-weights-in-r/) dann zahlreiche Funktionen zur Verfügung, die eine gewichtete Variante der basis-Befehle sind - bspw. `svymean()` und `svytable()`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(survey)\npend_kap7_wgt <- svydesign(id      = ~pnr,\n                           weights = ~wqp,\n                           data    = pend_kap7w)\n\nsvymean(~palter, pend_kap7_wgt, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         mean     SE\npalter 51.171 0.5755\n```\n:::\n\n```{.r .cell-code}\nmean(pend_kap7$palter, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 46.49612\n```\n:::\n:::\n\nFür Tabellen gibt es in `{survey}` auch eine Funktion: \n\n::: {.cell}\n\n```{.r .cell-code}\nsvytable(~zpsex+statakt,pend_kap7_wgt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     statakt\nzpsex         1         2         3\n    1 206326062  26678834  64867832\n    2 177223245  21205451 109600208\n```\n:::\n\n```{.r .cell-code}\ntable(pend_kap7$zpsex,pend_kap7$statakt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   \n       1    2    3\n  1 4685 3240 2047\n  2 4785 2899 3434\n```\n:::\n:::\n\n\n\nFür [Regressionsmodelle](#reg) gibt es bspw. `survey::svyglm()`\n\n<!-- Lektüre: [Kiesl, H. (2014). Gewichtung. In N. Baur & J. Blasius (Eds.), Handbuch Methoden der empirischen Sozialforschung (pp. 349–356). Springer Fachmedien Wiesbaden.](https://doi.org/10.1007/978-3-531-18939-0_24) -->\n\n### [Übung](#weight)\n\n## Übungen\n\n### Übung 1 {#ttestue}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npend_ue7 <- haven::read_dta(\"./orig/PENDDAT_cf_W13.dta\",\n                            col_select = c(\"pnr\",\"welle\",\"zpsex\",\"palter\",\"netges\")) %>% \n  mutate(across(everything(), ~ifelse(.x < 0,NA,.x))) # missings  mit NA überschreiben\n```\n:::\n\n\nTesten Sie die Hypothese, dass ein signifikanter Unterschied im Alter (`palter`) zwischen Männern und Frauen besteht (`zpsex`). Die Missings beider Variablen wurden im `mutate()` der Befehle oben schon mit `NA` überschrieben - Sie können direkt los legen.\n\nSehen Sie sich die Informationen an, welche `t.test()` erstellt: legen Sie das Ergebnis des Tests als Objekt ab (`test1 <- ...`) und sehen Sie sich die Informationen unter `test1$` an (drücken Sie die `↹` Taste).\n\nBerechnen Sie die Korrelation zwischen Alter (`palter`) und Einkommen (`netges`).\n\n\n### Übung 2 {#weight}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwgt_df <- haven::read_dta(\"./orig/pweights_cf_W13.dta\")\nhead(wgt_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 7\n         pnr welle                   sample             wqp ppbleib   psu strpsu\n       <dbl> <dbl+lbl>               <dbl+lbl>        <dbl>   <dbl> <dbl>  <dbl>\n1 1000001901 1 [Welle 1 (2006/2007)] 2 [Microm-Stic… 20075.   NA       80     64\n2 1000001901 3 [Welle 3 (2008/2009)] 2 [Microm-Stic… 32959.   NA       80     64\n3 1000001902 1 [Welle 1 (2006/2007)] 2 [Microm-Stic… 23077.   NA       80     64\n4 1000002001 1 [Welle 1 (2006/2007)] 1 [BA-Stichpro…  1639.    1.87    80     64\n5 1000002001 2 [Welle 2 (2007/2008)] 1 [BA-Stichpro…  1668.    1.12    80     64\n6 1000002001 3 [Welle 3 (2008/2009)] 1 [BA-Stichpro…  1748.    1.36    80     64\n```\n:::\n\n```{.r .cell-code}\npend_ue7 <- pend_ue7 %>% left_join(wgt_df, by = join_by(pnr,welle))\n```\n:::\n\n\n+ Legen Sie die Gewichtung auf Basis von `wqp` an.\n+ Berechnen Sie den Mittelwert für den Nettoverdienst `netges` mit und ohne Gewichtung.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}