{
  "hash": "af562c53b58aaae51ad68fa48ff5c5f3",
  "result": {
    "markdown": "# Weitere Visualisierungen mit `{ggplot2}` {#viz2}\n\n\n\n\n\nNeben den in [Kapitel 4](#viz) vorgestellten klassischen Grafiken gibt es eine ganze Reihe an Erweiterungen, die `{ggplot2}` \n\n## Karten (\"Choroplethen\") {#map}\n\nFür Karten und Arbeiten mit räumlichen Daten steht das Paket `{sf}` zur Verfügung. \nDas tolle ist: wir können `{sf}`-Daten mit den bekannten  `{tidyverse}` Befehlen bearbeiten. \nUm eine Karte zu erstellen, benötigen wir ein *shapefile*, welches Informationen zu den darzustellenden Gebieten enthält. \nFür Deutschland stellt das [Geodatenzentrum des Bundesamts für Kartographie und Geodäsie](http://gdz.bkg.bund.de/) shapefiles für die Gemeinden, Kreise und Länder zur Verfügung.\n\n::: {.callout-tip}\n## [Hier](https://daten.gdz.bkg.bund.de/produkte/vg/vg250_ebenen_0101/) finden sich die shapefiles der verschiedenen Jahre.\n\nMeist liegen Ergebnisse oder Daten, die wir darstellen möchten auf Basis eines bestimmten Gebietsstands vor (durch Gebietsreformen gibt es kontinuierliche Änderungen sowohl der Gebiete als auch der Kennziffern).\nUm ein aufwändiges record linkage zu vermeinden, ist es hilfreich das shape file für das entsprechende Jahr zu verwenden. \n[Auf dieser Seite](https://daten.gdz.bkg.bund.de/produkte/vg/vg250_ebenen_0101/) finden sich auch vergangene Gebietsstände.\nDie Dateien mit dem Namensschema **`vg250_01-01.utm32s.shape.ebenen.zip`** enthalten die benötigten Infos, wie wir sie im folgenden verwenden.\n\n:::\n\nDiese shapefiles können wir dann auf Basis der AGS ([Amtlicher Gemeindeschlüssel](https://de.wikipedia.org/wiki/Amtlicher_Gemeindeschl%C3%BCssel)) mit Daten verbinden und dann als Karte darstellen:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](15_map_files/figure-html/map1-1.png){width=384}\n:::\n:::\n\n\nUm ein shapefile zu laden, installieren wir zunächst `{sf}` und laden es dann mit `library()`. \nDas eigentliche Laden leistet dann der Befehl `read_sf()`, wobei wir neben dem Dateipfad in den entpackten Ordner mit den shapefiles zusätzlich das `layer`, also die Ebene angeben müssen. \nIn den shapefiles des BKG gibt es folgende Layer:\n\n+ `VG250_LAN`: Bundesländer (2-stellige AGS)\n+ `VG250_KRS`: Kreise und kreisfreie Städte (5-stellige AGS)\n+ `VG250_GEM`: Städte und Gemeinden (8-stellige AGS)\n\nWenn wir also die Bundesländer laden möchten gehen wir wie folgt vor:\n\n::: {.cell}\n\n```{.r .cell-code}\nlan17 <- sf::read_sf(\"D:/Datenspeicher/regstat/shapefiles/vg250_2017.utm32s.shape.ebenen/vg250_ebenen\",\n                     layer=\"VG250_LAN\")\n```\n:::\n\n\nDas Objekt `lan17` können wir nun für einen `ggplot()`-Befehl verwenden.\n`lan17` enthält außerdem die Seegebiete, diese können wir mittels eines `filter()`-Befehls auf die Landgebiete einschränken (`GF` = 4):\n\n::: {.cell layout-ncol=\"2\"}\n\n```{.r .cell-code}\nggplot(lan17) + \n    geom_sf(size = .1)  +\n    labs(title = \"Bundesländer nach Gebietsstand 2017\") +\n    theme_minimal()\n```\n\n::: {.cell-output-display}\n![](15_map_files/figure-html/mapplot-1.png){width=576}\n:::\n\n```{.r .cell-code}\nggplot(lan17 %>% filter(GF==4)) + \n    geom_sf(size = .1)  +\n    labs(title = \"Bundesländer nach Gebietsstand 2017\") +\n    theme_minimal()\n```\n\n::: {.cell-output-display}\n![](15_map_files/figure-html/mapplot-2.png){width=576}\n:::\n:::\n\n\n\nMöchten wir nun die Bundesländer bspw. nach der Arbeitslosenquote einfärben, müssen wir diese an die Daten heranspielen. \nDer Einfachheit halber simuliere ich hier die Werte:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nalo_df <- \n  data.frame(ags = unique(lan17$AGS),\n             alq = sample(seq(.03,.095,.001) ,size = 16,replace = T))\nhead(alo_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  ags   alq\n1  01 0.076\n2  02 0.072\n3  03 0.072\n4  04 0.074\n5  05 0.063\n6  06 0.089\n```\n:::\n:::\n\n\n\n\nJetzt können wir den `alo_df` an das `lan17` shapefile heranspielen mit Hilfe eines [`left_join()`](#join).\n\n::: {.cell}\n\n```{.r .cell-code}\nlan17 %>% filter(GF==4) %>% left_join(alo_df,by = join_by(\"AGS\"==\"ags\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlan17 %>% filter(GF==4) %>% left_join(alo_df,by = join_by(\"AGS\"==\"ags\")) %>% \n  select(AGS,GEN,alq) %>% \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 6 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 280371.1 ymin: 5471366 xmax: 674202.3 ymax: 6101444\nProjected CRS: ETRS89 / UTM zone 32N\n# A tibble: 6 × 4\n  AGS   GEN                   alq                                       geometry\n  <chr> <chr>               <dbl>                             <MULTIPOLYGON [m]>\n1 01    Schleswig-Holstein  0.076 (((464810.7 6100447, 464936.7 6100389, 465073…\n2 02    Hamburg             0.072 (((578219 5954278, 578433.9 5954189, 578557.7…\n3 03    Niedersachsen       0.072 (((479451.1 5971302, 479365.8 5971220, 479213…\n4 04    Bremen              0.074 (((466930.3 5897851, 467015.7 5897733, 467379…\n5 05    Nordrhein-Westfalen 0.063 (((477607.3 5818769, 477708 5818638, 477758.9…\n6 06    Hessen              0.089 (((534242 5721822, 534214.5 5721748, 534149.4…\n```\n:::\n:::\n\n\nDie Syntax für den eigentlichen Plot ist dann wieder wie für jeden anderen `ggplot()` auch - mit `fill =` können wir eine Flächenfarbe angeben und mit `scale_fill_...` eine Farbpalette auswählen:\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(scico)\nlan17 %>% filter(GF==4) %>% left_join(alo_df,by = join_by(\"AGS\"==\"ags\")) %>% \n  ggplot() + \n      geom_sf(size = .1, aes(fill = alq))  +\n      labs(title = \"Arbeitslosenquote für Bundesländer\",\n           subtitle = \"(keine echten Daten)\",\n           fill = \"Arbeitslosen-\\nquote\") +\n      scale_fill_scico(palette = \"oslo\") + # setzt scico Paket voraus\n      theme_minimal()\n```\n\n::: {.cell-output-display}\n![](15_map_files/figure-html/mapplot2-1.png){width=480}\n:::\n:::\n\n\n\n## Übung\n\nErstellen Sie selbst eine Karte - für die Länder-, Kreis- oder Gemeindeebene.\n\n+ Das Shapefile für das Jahr 2017 finden Sie im Kursordner unter `/orig` in der Quickablage.",
    "supporting": [
      "15_map_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}